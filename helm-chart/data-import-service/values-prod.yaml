# Production environment values
# Override default values for production deployment with enhanced security and performance

# Global configuration for production
global:
  imageRegistry: "your-registry.com/"
  imagePullSecrets:
    - name: registry-secret
  storageClass: "fast-ssd"

# MySQL Configuration for Production
mysql:
  primary:
    persistence:
      size: 200Gi
      storageClass: "fast-ssd"
    resources:
      limits:
        memory: 8Gi
        cpu: 4000m
      requests:
        memory: 4Gi
        cpu: 2000m
    
    # Production-optimized MySQL configuration
    configuration: |-
      [mysqld]
      # Character set and collation
      character-set-server = utf8mb4
      collation-server = utf8mb4_unicode_ci
      init-connect = 'SET NAMES utf8mb4'
      
      # Packet size for large file uploads
      max_allowed_packet = 2G
      
      # InnoDB Configuration - Production optimized
      innodb_buffer_pool_size = 6G
      innodb_redo_log_capacity = 2G
      innodb_flush_log_at_trx_commit = 1
      innodb_file_per_table = 1
      innodb_adaptive_hash_index = ON
      innodb_adaptive_flushing = ON
      innodb_flush_neighbors = 0
      innodb_autoinc_lock_mode = 2
      innodb_doublewrite = ON
      innodb_flush_method = O_DIRECT
      innodb_read_io_threads = 16
      innodb_write_io_threads = 16
      innodb_io_capacity = 2000
      innodb_io_capacity_max = 4000
      
      # Connection Configuration - Production scale
      max_connections = 1000
      max_connect_errors = 100000
      connect_timeout = 30
      wait_timeout = 28800
      interactive_timeout = 28800
      
      # Lock and Transaction Configuration
      innodb_lock_wait_timeout = 50
      lock_wait_timeout = 50
      transaction_isolation = READ-COMMITTED
      innodb_rollback_on_timeout = ON
      autocommit = 0
      innodb_deadlock_detect = ON
      innodb_print_all_deadlocks = OFF
      
      # Table and Cache Configuration
      table_open_cache = 16000
      table_definition_cache = 5600
      tmp_table_size = 512M
      max_heap_table_size = 512M
      
      # Buffer Configuration - Production scale
      sort_buffer_size = 64M
      read_buffer_size = 16M
      read_rnd_buffer_size = 64M
      myisam_sort_buffer_size = 512M
      
      # Query Cache (disabled for better concurrency)
      query_cache_type = 0
      query_cache_size = 0
      
      # Thread Configuration
      thread_cache_size = 400
      thread_stack = 2M
      max_prepared_stmt_count = 65536
      
      # Binary Logging - Production settings
      log_bin = mysql-bin
      binlog_format = ROW
      binlog_expire_logs_seconds = 259200
      max_binlog_size = 1G
      sync_binlog = 1
      
      # Error and Slow Query Logging
      log_error = /var/log/mysql/error.log
      slow_query_log = 1
      slow_query_log_file = /var/log/mysql/slow.log
      long_query_time = 0.5
      log_queries_not_using_indexes = 0
      min_examined_row_limit = 10000
      
      # Security - Production hardened
      local_infile = 0
      skip_name_resolve = ON
      skip_symbolic_links = ON
      secure_file_priv = /var/lib/mysql-files/
      
      # Performance Schema - Production monitoring
      performance_schema = ON
      performance_schema_max_table_instances = 12500
      performance_schema_max_table_handles = 4000
      performance_schema_consumer_events_statements_current = ON
      performance_schema_consumer_events_statements_history = ON
      performance_schema_consumer_events_statements_history_long = ON
      performance_schema_consumer_events_waits_current = ON
      performance_schema_consumer_events_waits_history = ON
      performance_schema_consumer_events_waits_history_long = ON
      
      # SQL Mode - Production strict
      sql_mode = STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE
  
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      interval: 15s

# Backend Configuration for Production
backend:
  replicaCount: 5
  
  image:
    tag: "1.0.0"
    pullPolicy: IfNotPresent
  
  resources:
    limits:
      memory: 6Gi
      cpu: 3000m
    requests:
      memory: 3Gi
      cpu: 1500m
  
  autoscaling:
    enabled: true
    minReplicas: 5
    maxReplicas: 20
    targetCPUUtilizationPercentage: 60
    targetMemoryUtilizationPercentage: 70
  
  env:
    JAVA_OPTS: "-Xmx4g -Xms2g -XX:+UseG1GC -XX:+UseStringDeduplication -XX:MaxGCPauseMillis=100 -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
    LOGGING_LEVEL_ROOT: "WARN"
    LOGGING_LEVEL_COM_IMPORTSERVICE: "INFO"
    DESTINATION_API_LOGGING_ENABLED: "false"
    
    # Production database settings
    SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE: "30"
    SPRING_DATASOURCE_HIKARI_MINIMUM_IDLE: "15"
    SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT: "30000"
    SPRING_DATASOURCE_HIKARI_IDLE_TIMEOUT: "300000"
    SPRING_DATASOURCE_HIKARI_MAX_LIFETIME: "900000"
    SPRING_DATASOURCE_HIKARI_LEAK_DETECTION_THRESHOLD: "30000"
    
    # Production JPA settings
    SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_BATCH_SIZE: "100"
    SPRING_JPA_PROPERTIES_HIBERNATE_ORDER_INSERTS: "true"
    SPRING_JPA_PROPERTIES_HIBERNATE_ORDER_UPDATES: "true"
    SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_BATCH_VERSIONED_DATA: "true"
    SPRING_JPA_PROPERTIES_HIBERNATE_CACHE_USE_SECOND_LEVEL_CACHE: "true"
    SPRING_JPA_PROPERTIES_HIBERNATE_CACHE_USE_QUERY_CACHE: "true"
    
    # Production timeouts
    SOURCE_API_TIMEOUT: "1800000"  # 30 minutes
    HTTP_CLIENT_TIMEOUT: "120000"  # 2 minutes
    SPRING_TRANSACTION_DEFAULT_TIMEOUT: "600"  # 10 minutes
    
    # Production correspondence settings
    CORRESPONDENCE_RANDOM_SUBJECT_ENABLED: "false"
    FILE_UPLOAD_USE_SAMPLE: "false"
  
  # Production health checks
  livenessProbe:
    httpGet:
      path: /data-import/api/health
      port: 8080
    initialDelaySeconds: 120
    periodSeconds: 30
    timeoutSeconds: 15
    failureThreshold: 3
    successThreshold: 1
  
  readinessProbe:
    httpGet:
      path: /data-import/api/health
      port: 8080
    initialDelaySeconds: 90
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 3
    successThreshold: 1
  
  startupProbe:
    httpGet:
      path: /data-import/api/health
      port: 8080
    initialDelaySeconds: 60
    periodSeconds: 15
    timeoutSeconds: 10
    failureThreshold: 20
    successThreshold: 1
  
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: "2g"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
      nginx.ingress.kubernetes.io/client-max-body-size: "2g"
      nginx.ingress.kubernetes.io/rate-limit: "100"
      nginx.ingress.kubernetes.io/rate-limit-window: "1m"
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
    hosts:
      - host: api.data-import.yourdomain.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: data-import-api-tls
        hosts:
          - api.data-import.yourdomain.com

# Frontend Configuration for Production
frontend:
  replicaCount: 5
  
  image:
    tag: "1.0.0"
    pullPolicy: IfNotPresent
  
  resources:
    limits:
      memory: 1Gi
      cpu: 500m
    requests:
      memory: 512Mi
      cpu: 250m
  
  autoscaling:
    enabled: true
    minReplicas: 5
    maxReplicas: 15
    targetCPUUtilizationPercentage: 60
    targetMemoryUtilizationPercentage: 70
  
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: "10m"
      nginx.ingress.kubernetes.io/gzip-types: "text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript"
      nginx.ingress.kubernetes.io/rate-limit: "200"
      nginx.ingress.kubernetes.io/rate-limit-window: "1m"
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
    hosts:
      - host: data-import.yourdomain.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: data-import-frontend-tls
        hosts:
          - data-import.yourdomain.com

# Enable Redis for production caching
redis:
  enabled: true
  auth:
    enabled: true
    password: "your-redis-password"
  master:
    persistence:
      enabled: true
      size: 20Gi
      storageClass: "fast-ssd"
    resources:
      limits:
        memory: 2Gi
        cpu: 1000m
      requests:
        memory: 1Gi
        cpu: 500m

# Enable production features
podDisruptionBudget:
  enabled: true
  minAvailable: 2

monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 15s
    scrapeTimeout: 10s

# Network policy for production security
networkPolicy:
  enabled: true
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
      ports:
        - protocol: TCP
          port: 8080
        - protocol: TCP
          port: 80
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/component: frontend
      ports:
        - protocol: TCP
          port: 8080
  egress:
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/component: mysql
      ports:
        - protocol: TCP
          port: 3306
    - to: []
      ports:
        - protocol: TCP
          port: 80
        - protocol: TCP
          port: 443
        - protocol: UDP
          port: 53

# Enable backup for production
backup:
  enabled: true
  schedule: "0 2 * * *"
  retention: "30d"
  storageClass: "standard"

# Resource quotas for production namespace
resourceQuota:
  enabled: true
  hard:
    requests.cpu: "20"
    requests.memory: 40Gi
    limits.cpu: "40"
    limits.memory: 80Gi
    persistentvolumeclaims: "10"
    services: "20"
    secrets: "50"
    configmaps: "50"

# Limit ranges for production
limitRange:
  enabled: true
  limits:
    - default:
        cpu: 1000m
        memory: 2Gi
      defaultRequest:
        cpu: 200m
        memory: 512Mi
      type: Container

# Security policies for production
securityPolicy:
  enabled: true
  allowPrivilegeEscalation: false
  runAsNonRoot: true
  runAsUser: 1001
  fsGroup: 1001

# Production node affinity
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: node-type
              operator: In
              values:
                - production
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
                - data-import-service
        topologyKey: kubernetes.io/hostname

# Production tolerations
tolerations:
  - key: "production-only"
    operator: "Equal"
    value: "true"
    effect: "NoSchedule"

# HPA with custom metrics for production
hpa:
  enabled: true
  minReplicas: 5
  maxReplicas: 30
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 70
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 600
      policies:
        - type: Percent
          value: 25
          periodSeconds: 120
    scaleUp:
      stabilizationWindowSeconds: 120
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
        - type: Pods
          value: 3
          periodSeconds: 60

# Enable VPA for production optimization
vpa:
  enabled: true
  updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: backend
        maxAllowed:
          cpu: 8000m
          memory: 16Gi
        minAllowed:
          cpu: 500m
          memory: 1Gi
      - containerName: frontend
        maxAllowed:
          cpu: 1000m
          memory: 2Gi
        minAllowed:
          cpu: 100m
          memory: 256Mi

# Production external services
externalServices:
  keycloak:
    enabled: true
    url: "https://auth.yourdomain.com/auth"
    realm: "production"
    clientId: "data-import-prod"
  
  sourceApi:
    enabled: true
    baseUrl: "https://api.source-system.com/secure"
    timeout: 1800000
  
  destinationApi:
    enabled: true
    baseUrl: "https://destination.yourdomain.com"
    timeout: 120000

# Production feature flags
features:
  randomSubjectGeneration: false
  sampleFileUpload: false
  requestLogging: false
  metricsCollection: true
  healthChecks: true
  securityScanning: true
  performanceMonitoring: true