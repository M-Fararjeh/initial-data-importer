{{- if .Values.mysql.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "data-import-service.mysql.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "data-import-service.mysql.labels" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "data-import-service.mysql.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "data-import-service.mysql.selectorLabels" . | nindent 8 }}
    spec:
      {{- include "data-import-service.imagePullSecrets" . | nindent 6 }}
      securityContext:
        fsGroup: 999
        runAsUser: 999
        runAsNonRoot: true
      containers:
        - name: mysql
          image: "{{ .Values.mysql.image.registry }}/{{ .Values.mysql.image.repository }}:{{ .Values.mysql.image.tag }}"
          imagePullPolicy: {{ .Values.mysql.image.pullPolicy }}
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "data-import-service.mysql.fullname" . }}-secret
                  key: mysql-root-password
            - name: MYSQL_DATABASE
              value: {{ .Values.mysql.auth.database | quote }}
            - name: MYSQL_USER
              value: {{ .Values.mysql.auth.username | quote }}
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "data-import-service.mysql.fullname" . }}-secret
                  key: mysql-password
            - name: MYSQL_ROOT_HOST
              value: "%"
          ports:
            - name: mysql
              containerPort: 3306
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - mysqladmin
                - ping
                - -h
                - 127.0.0.1
                - -u
                - root
                - -p$(MYSQL_ROOT_PASSWORD)
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - mysqladmin
                - ping
                - -h
                - 127.0.0.1
                - -u
                - root
                - -p$(MYSQL_ROOT_PASSWORD)
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            {{- toYaml .Values.mysql.primary.resources | nindent 12 }}
          volumeMounts:
            {{- if .Values.mysql.primary.persistence.enabled }}
            - name: data
              mountPath: /var/lib/mysql
            {{- end }}
            - name: config
              mountPath: /etc/mysql/conf.d/zz-custom.cnf
              subPath: my.cnf
            - name: logs
              mountPath: /var/log/mysql
      volumes:
        {{- if .Values.mysql.primary.persistence.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "data-import-service.mysql.fullname" . }}-data
        {{- else }}
        - name: data
          emptyDir: {}
        {{- end }}
        - name: config
          configMap:
            name: {{ include "data-import-service.mysql.fullname" . }}-config
        - name: logs
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}