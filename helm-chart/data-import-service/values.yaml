# Default values for data-import-service
# This is a YAML-formatted file.

# Global configuration
global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: ""

# Common labels applied to all resources
commonLabels:
  app.kubernetes.io/name: data-import-service
  app.kubernetes.io/instance: data-import-service
  app.kubernetes.io/version: "1.0.0"
  app.kubernetes.io/component: data-import
  app.kubernetes.io/part-of: data-import-service
  app.kubernetes.io/managed-by: helm

# MySQL Database Configuration
mysql:
  enabled: true
  image:
    registry: docker.io
    repository: mysql
    tag: "8.0.43"
    pullPolicy: IfNotPresent
  
  auth:
    rootPassword: "rootpassword123"
    database: "data_import_db"
    username: "import_user"
    password: "import_password123"
  
  primary:
    persistence:
      enabled: true
      storageClass: ""
      size: 50Gi
      accessModes:
        - ReadWriteOnce
    
    resources:
      limits:
        memory: 4Gi
        cpu: 2000m
      requests:
        memory: 2Gi
        cpu: 1000m
    
    # Optimized MySQL configuration for large datasets
    configuration: |-
      [mysqld]
      # Character set and collation
      character-set-server = utf8mb4
      collation-server = utf8mb4_unicode_ci
      init-connect = 'SET NAMES utf8mb4'
      
      # Packet size for large file uploads
      max_allowed_packet = 1G
      
      # InnoDB Configuration
      innodb_buffer_pool_size = 3G
      innodb_redo_log_capacity = 1G
      innodb_flush_log_at_trx_commit = 2
      innodb_file_per_table = 1
      innodb_adaptive_hash_index = ON
      innodb_adaptive_flushing = ON
      innodb_flush_neighbors = 0
      innodb_autoinc_lock_mode = 2
      innodb_doublewrite = ON
      innodb_flush_method = O_DIRECT
      innodb_read_io_threads = 8
      innodb_write_io_threads = 8
      innodb_io_capacity = 1000
      innodb_io_capacity_max = 2000
      
      # Connection Configuration
      max_connections = 400
      max_connect_errors = 10000
      connect_timeout = 30
      wait_timeout = 28800
      interactive_timeout = 28800
      
      # Lock and Transaction Configuration
      innodb_lock_wait_timeout = 30
      lock_wait_timeout = 30
      transaction_isolation = READ-COMMITTED
      innodb_rollback_on_timeout = ON
      autocommit = 0
      innodb_deadlock_detect = ON
      innodb_print_all_deadlocks = ON
      
      # Table and Cache Configuration
      table_open_cache = 8000
      table_definition_cache = 2800
      tmp_table_size = 256M
      max_heap_table_size = 256M
      
      # Buffer Configuration
      sort_buffer_size = 32M
      read_buffer_size = 8M
      read_rnd_buffer_size = 32M
      myisam_sort_buffer_size = 256M
      
      # Query Cache (disabled for better concurrency)
      query_cache_type = 0
      query_cache_size = 0
      
      # Thread Configuration
      thread_cache_size = 200
      thread_stack = 1M
      max_prepared_stmt_count = 32768
      
      # Binary Logging
      log_bin = mysql-bin
      binlog_format = ROW
      binlog_expire_logs_seconds = 604800
      max_binlog_size = 500M
      sync_binlog = 2
      
      # Error and Slow Query Logging
      log_error = /var/log/mysql/error.log
      slow_query_log = 1
      slow_query_log_file = /var/log/mysql/slow.log
      long_query_time = 1
      log_queries_not_using_indexes = 1
      min_examined_row_limit = 1000
      
      # Security
      local_infile = 0
      skip_name_resolve = ON
      skip_symbolic_links = ON
      
      # Performance Schema
      performance_schema = ON
      performance_schema_consumer_events_statements_current = ON
      performance_schema_consumer_events_statements_history = ON
      performance_schema_consumer_events_statements_history_long = ON
      performance_schema_consumer_events_waits_current = ON
      performance_schema_consumer_events_waits_history = ON
      performance_schema_consumer_events_waits_history_long = ON
      
      # SQL Mode
      sql_mode = STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION
  
  service:
    type: ClusterIP
    port: 3306
  
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

# Backend (Spring Boot) Configuration
backend:
  enabled: true
  
  image:
    registry: ""
    repository: data-import-service
    tag: "latest"
    pullPolicy: IfNotPresent
  
  replicaCount: 2
  
  service:
    type: ClusterIP
    port: 8080
    targetPort: 8080
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-type: nlb
      service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
  
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: "1g"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
      nginx.ingress.kubernetes.io/client-max-body-size: "1g"
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
    hosts:
      - host: api.data-import.local
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: data-import-api-tls
        hosts:
          - api.data-import.local
  
  resources:
    limits:
      memory: 4Gi
      cpu: 2000m
    requests:
      memory: 2Gi
      cpu: 1000m
  
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 8
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  
  # Environment variables
  env:
    SPRING_PROFILES_ACTIVE: "kubernetes"
    JAVA_OPTS: "-Xmx3g -Xms1g -XX:+UseG1GC -XX:+UseStringDeduplication -XX:MaxGCPauseMillis=200"
    
    # Database Configuration
    SPRING_DATASOURCE_DRIVER_CLASS_NAME: "com.mysql.cj.jdbc.Driver"
    SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE: "20"
    SPRING_DATASOURCE_HIKARI_MINIMUM_IDLE: "10"
    SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT: "30000"
    SPRING_DATASOURCE_HIKARI_IDLE_TIMEOUT: "600000"
    SPRING_DATASOURCE_HIKARI_MAX_LIFETIME: "1800000"
    
    # JPA Configuration
    SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_BATCH_SIZE: "50"
    SPRING_JPA_PROPERTIES_HIBERNATE_ORDER_INSERTS: "true"
    SPRING_JPA_PROPERTIES_HIBERNATE_ORDER_UPDATES: "true"
    SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_BATCH_VERSIONED_DATA: "true"
    
    # Keycloak Configuration
    KEYCLOAK_AUTH_ENABLED: "true"
    KEYCLOAK_AUTH_SERVER_URL: "http://18.206.121.44/auth"
    KEYCLOAK_AUTH_REALM: "itba"
    KEYCLOAK_AUTH_CLIENT_ID: "cspfrontend"
    KEYCLOAK_AUTH_USERNAME: "cts_admin"
    
    # Source API Configuration
    SOURCE_API_BASE_URL: "https://itba.tarasol.cloud/Tarasol4ExtractorApi/Api/secure"
    SOURCE_API_KEY: "test"
    SOURCE_API_TIMEOUT: "900000"
    SOURCE_API_RETRY_MAX_ATTEMPTS: "3"
    
    # Destination API Configuration
    DESTINATION_API_BASE_URL: "http://18.206.121.44"
    DESTINATION_API_URL: "http://18.206.121.44/nuxeo/api/v1/custom-automation/AC_UA_ExternalAgency_Create"
    DESTINATION_API_LOGGING_ENABLED: "false"
    
    # HTTP Client Configuration
    HTTP_CLIENT_TIMEOUT: "60000"
    
    # File Upload Configuration
    FILE_UPLOAD_USE_SAMPLE: "false"
    FILE_UPLOAD_SAMPLE_FILENAME: "sample_document.pdf"
    FILE_UPLOAD_SAMPLE_MIMETYPE: "application/pdf"
    
    # Correspondence Configuration
    CORRESPONDENCE_RANDOM_SUBJECT_ENABLED: "false"
    CORRESPONDENCE_RANDOM_SUBJECT_PREFIX: "PROD-"
    CORRESPONDENCE_RANDOM_SUBJECT_TEMPLATES: "Official Document,Administrative Notice,Business Communication,Policy Update,Report Submission"
    
    # Admin User Configuration
    ADMIN_USER_USERNAME: "cts_admin"
    ADMIN_USER_DISPLAY_NAME: "CTS Administrator"
    
    # Logging Configuration
    LOGGING_LEVEL_ROOT: "INFO"
    LOGGING_LEVEL_COM_IMPORTSERVICE: "INFO"
    LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB_CLIENT: "WARN"
    LOGGING_PATTERN_CONSOLE: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    LOGGING_FILE_NAME: "/app/logs/application.log"
    LOGGING_FILE_MAX_SIZE: "100MB"
    
    # Transaction Configuration
    SPRING_TRANSACTION_DEFAULT_TIMEOUT: "300"
    SPRING_JPA_PROPERTIES_JAVAX_PERSISTENCE_QUERY_TIMEOUT: "60000"
    SPRING_JPA_PROPERTIES_HIBERNATE_QUERY_TIMEOUT: "60000"
  
  # Secrets (will be created from values)
  secrets:
    MYSQL_PASSWORD: "import_password123"
    KEYCLOAK_AUTH_PASSWORD: "Admin@itba2023"
    DESTINATION_API_TOKEN: "fallback_token_if_keycloak_fails"
  
  # Health checks
  livenessProbe:
    httpGet:
      path: /data-import/api/health
      port: 8080
    initialDelaySeconds: 90
    periodSeconds: 30
    timeoutSeconds: 10
    failureThreshold: 3
    successThreshold: 1
  
  readinessProbe:
    httpGet:
      path: /data-import/api/health
      port: 8080
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  
  # Startup probe for slow-starting applications
  startupProbe:
    httpGet:
      path: /data-import/api/health
      port: 8080
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 12
    successThreshold: 1
  
  # Pod security context
  podSecurityContext:
    fsGroup: 1001
    runAsNonRoot: true
    runAsUser: 1001
    seccompProfile:
      type: RuntimeDefault
  
  # Container security context
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: false
    runAsNonRoot: true
    runAsUser: 1001

# Frontend (Angular) Configuration
frontend:
  enabled: true
  
  image:
    registry: ""
    repository: data-import-frontend
    tag: "latest"
    pullPolicy: IfNotPresent
  
  replicaCount: 3
  
  service:
    type: ClusterIP
    port: 80
    targetPort: 80
    annotations: {}
  
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: "10m"
      nginx.ingress.kubernetes.io/gzip-types: "text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript"
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
    hosts:
      - host: data-import.local
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: data-import-frontend-tls
        hosts:
          - data-import.local
  
  resources:
    limits:
      memory: 512Mi
      cpu: 500m
    requests:
      memory: 256Mi
      cpu: 250m
  
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  
  # Environment variables for frontend
  env:
    API_BASE_URL: ""  # Will be auto-generated from backend service
    NODE_ENV: "production"
  
  # Pod security context
  podSecurityContext:
    fsGroup: 101
    runAsNonRoot: true
    runAsUser: 101
    seccompProfile:
      type: RuntimeDefault
  
  # Container security context
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 101

# Redis Configuration (optional caching layer)
redis:
  enabled: false
  image:
    registry: docker.io
    repository: redis
    tag: "7-alpine"
    pullPolicy: IfNotPresent
  
  auth:
    enabled: false
    password: ""
  
  master:
    persistence:
      enabled: true
      size: 8Gi
    
    resources:
      limits:
        memory: 1Gi
        cpu: 500m
      requests:
        memory: 512Mi
        cpu: 250m

# Service Account
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Pod Disruption Budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1
  # maxUnavailable: 1  # Alternative to minAvailable

# Network Policy for enhanced security
networkPolicy:
  enabled: true
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
      ports:
        - protocol: TCP
          port: 8080
        - protocol: TCP
          port: 80
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/component: frontend
      ports:
        - protocol: TCP
          port: 8080
  egress:
    - to: []
      ports:
        - protocol: TCP
          port: 3306
        - protocol: TCP
          port: 80
        - protocol: TCP
          port: 443
        - protocol: UDP
          port: 53

# Monitoring and Observability
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    namespace: ""
    interval: 30s
    scrapeTimeout: 10s
    labels: {}
    annotations: {}

# Backup Configuration
backup:
  enabled: false
  schedule: "0 2 * * *"  # Daily at 2 AM
  retention: "7d"
  storageClass: ""
  resources:
    limits:
      memory: 1Gi
      cpu: 500m
    requests:
      memory: 512Mi
      cpu: 250m

# Node selector, tolerations and affinity
nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - data-import-service
          topologyKey: kubernetes.io/hostname

# Additional volumes and volume mounts
extraVolumes: []
extraVolumeMounts: []

# Additional environment variables
extraEnvVars: []

# Additional secrets
extraSecrets: {}

# Resource quotas
resourceQuota:
  enabled: false
  hard:
    requests.cpu: "4"
    requests.memory: 8Gi
    limits.cpu: "8"
    limits.memory: 16Gi
    persistentvolumeclaims: "3"

# Limit ranges
limitRange:
  enabled: false
  limits:
    - default:
        cpu: 500m
        memory: 1Gi
      defaultRequest:
        cpu: 100m
        memory: 256Mi
      type: Container

# Security policies
securityPolicy:
  enabled: false
  allowPrivilegeEscalation: false
  runAsNonRoot: true
  runAsUser: 1001
  fsGroup: 1001
  seLinuxOptions: {}
  supplementalGroups: []
  sysctls: []

# Horizontal Pod Autoscaler v2 configuration
hpa:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 60
        - type: Pods
          value: 2
          periodSeconds: 60

# Vertical Pod Autoscaler configuration
vpa:
  enabled: false
  updateMode: "Off"  # Off, Initial, Recreation, Auto
  resourcePolicy:
    containerPolicies:
      - containerName: backend
        maxAllowed:
          cpu: 4000m
          memory: 8Gi
        minAllowed:
          cpu: 100m
          memory: 256Mi

# Init containers
initContainers:
  waitForMysql:
    enabled: true
    image: busybox:1.35
    command: ['sh', '-c']
    args:
      - |
        echo "Waiting for MySQL to be ready..."
        until nc -z {{ include "data-import-service.mysql.fullname" . }} {{ .Values.mysql.service.port }}; do
          echo "MySQL is not ready yet. Waiting..."
          sleep 5
        done
        echo "MySQL is ready!"

# Sidecar containers
sidecars: []

# Jobs and CronJobs
jobs:
  # Database migration job
  migration:
    enabled: false
    image:
      repository: migrate/migrate
      tag: "v4.15.2"
    resources:
      limits:
        memory: 256Mi
        cpu: 200m
      requests:
        memory: 128Mi
        cpu: 100m

cronJobs:
  # Database backup job
  backup:
    enabled: false
    schedule: "0 2 * * *"
    image:
      repository: mysql
      tag: "8.0.43"
    resources:
      limits:
        memory: 512Mi
        cpu: 200m
      requests:
        memory: 256Mi
        cpu: 100m

# External services configuration
externalServices:
  keycloak:
    enabled: true
    url: "http://18.206.121.44/auth"
    realm: "itba"
    clientId: "cspfrontend"
  
  sourceApi:
    enabled: true
    baseUrl: "https://itba.tarasol.cloud/Tarasol4ExtractorApi/Api/secure"
    timeout: 900000
  
  destinationApi:
    enabled: true
    baseUrl: "http://18.206.121.44"
    timeout: 60000

# Feature flags
features:
  randomSubjectGeneration: true
  sampleFileUpload: false
  requestLogging: false
  metricsCollection: true
  healthChecks: true