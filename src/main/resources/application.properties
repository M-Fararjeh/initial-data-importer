# Server Configuration
server.port=8080
server.context-path=/data-import

# Application Configuration
spring.application.name=data-import-service

# Logging Configuration
logging.level.com.importservice=INFO
#logging.level.org.springframework.web.client=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# Destination API Configuration
destination.api.base-url=http://18.206.121.44
destination.api.url=http://18.206.121.44/nuxeo/api/v1/custom-automation/AC_UA_ExternalAgency_Create
destination.api.token=fallback_token_if_keycloak_fails

# Keycloak Configuration
keycloak.auth.enabled=true
keycloak.auth.server-url=http://18.206.121.44/auth
keycloak.auth.realm=itba
keycloak.auth.client-id=cspfrontend
keycloak.auth.username=cts_admin
keycloak.auth.password=Admin@itba2023
http.client.timeout=30000

# File Upload Configuration
file.upload.use-sample=true

file.upload.sample.filename=sample_document.pdf
file.upload.sample.mimetype=application/pdf

# Request Logging Configuration
destination.api.logging.enabled=false
destination.api.logging.include-headers=false
destination.api.logging.include-response=false

# Correspondence Configuration
correspondence.random-subject.enabled=true
correspondence.random-subject.prefix=AUTO-
correspondence.random-subject.templates=Important Document,Official Communication,Business Matter,Administrative Notice,Project Update,Policy Information,Meeting Minutes,Report Submission,Request for Action,Information Update,Urgent Memo,Policy Directive,Status Report,Meeting Agenda,Action Required,For Your Information,Confidential Matter,Strategic Planning,Budget Review,Performance Report

# Admin User Configuration
admin.user.username=cts_admin
admin.user.display-name=CTS Administrator

# Database Configuration - Development (MySQL)
#spring.datasource.url=jdbc:mysql://localhost:3306/data_import_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&characterEncoding=utf8&useUnicode=true
# Database Connection Configuration
# Database Connection Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/data_import_db4?useSSL=false&serverTimezone=UTC&useUnicode=true&characterEncoding=utf8&allowPublicKeyRetrieval=true&useServerPrepStmts=true&cachePrepStmts=true&prepStmtCacheSize=256&prepStmtCacheSqlLimit=2048&rewriteBatchedStatements=true
spring.datasource.username=root
spring.datasource.password=rootpassword123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Configuration
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=false

# Hibernate Configuration
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false

# Batch Processing - Disabled to prevent lock contention
spring.jpa.properties.hibernate.jdbc.batch_size=1
spring.jpa.properties.hibernate.order_inserts=false
spring.jpa.properties.hibernate.order_updates=false
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=false

# Connection and Transaction Management
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true
spring.jpa.properties.hibernate.connection.isolation=2
spring.jpa.properties.hibernate.jdbc.use_get_generated_keys=true
spring.jpa.properties.hibernate.jdbc.use_streams_for_binary=true
spring.jpa.properties.hibernate.connection.autocommit=false
spring.jpa.properties.hibernate.connection.release_mode=after_transaction

# FIXED: Consistent Timeout Configuration (all in milliseconds)
spring.transaction.default-timeout=180
spring.jpa.properties.hibernate.query.timeout=30000
spring.jpa.properties.javax.persistence.query.timeout=30000
spring.jpa.properties.hibernate.dialect.lock_timeout=10000

# Lock timeout configuration - more aggressive timeouts
spring.jpa.properties.javax.persistence.lock.timeout=3000
spring.jpa.properties.hibernate.lock_timeout=3000

# Removed conflicting/problematic timeout settings:
# spring.jpa.properties.hibernate.transaction.timeout=900
# spring.jpa.properties.javax.persistence.query.timeout=0
# spring.jpa.properties.hibernate.query.timeout=0

# Result Set Configuration
spring.jpa.properties.hibernate.jdbc.use_scrollable_resultset=true

# Cache Configuration - Disabled for concurrent access
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false

# Circular Reference Configuration
spring.main.allow-circular-references=false

# FIXED: HikariCP Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.minimum-idle=3
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=900000
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.initialization-fail-timeout=1
spring.datasource.hikari.auto-commit=false
spring.datasource.hikari.pool-name=DataImportHikariCP
spring.datasource.hikari.read-only=false
spring.datasource.hikari.keepalive-time=0

# FIXED: Enable connection leak detection (was disabled)
spring.datasource.hikari.leak-detection-threshold=30000

# ADDED: Connection validation to prevent stale connections
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.test-while-idle=true
spring.datasource.hikari.test-on-borrow=true

# ADDED: JMX monitoring for connection pool
spring.datasource.hikari.register-mbeans=true

# ADDED: MySQL deadlock detection and timeout settings
spring.datasource.hikari.data-source-properties.innodb_lock_wait_timeout=5
spring.datasource.hikari.data-source-properties.innodb_deadlock_detect=ON
spring.datasource.hikari.data-source-properties.innodb_rollback_on_timeout=ON

# ADDED: Logging configuration for debugging
#logging.level.com.zaxxer.hikari=DEBUG
#logging.level.org.springframework.transaction=DEBUG
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# ADDED: Additional Hibernate properties for better transaction handling
spring.jpa.properties.hibernate.connection.acquisition_mode=BY_SIZE
spring.jpa.properties.hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_RELEASE_AFTER_TRANSACTION

# ADDED: MySQL specific optimizations
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.connection.characterEncoding=utf8
spring.jpa.properties.hibernate.connection.useUnicode=true

# ADDED: Transaction rollback configuration
spring.jpa.properties.hibernate.transaction.rollback_on_completion_failure=true

# ADDED: Statement timeout at JDBC level
spring.datasource.hikari.data-source-properties.socketTimeout=120000
spring.datasource.hikari.data-source-properties.connectTimeout=30000

# ADDED: MySQL connection properties for better timeout handling
spring.datasource.hikari.data-source-properties.autoReconnect=true
spring.datasource.hikari.data-source-properties.failOverReadOnly=false
spring.datasource.hikari.data-source-properties.maxReconnects=3

# ADDED: MySQL specific timeout settings
spring.datasource.hikari.data-source-properties.interactiveClient=true
spring.datasource.hikari.data-source-properties.tcpKeepAlive=true
spring.datasource.hikari.data-source-properties.tcpNoDelay=true

# ADDED: MySQL lock and deadlock configuration
spring.datasource.hikari.data-source-properties.sessionVariables=innodb_lock_wait_timeout=5,lock_wait_timeout=5,innodb_deadlock_detect=ON

# Multithreading Configuration for Creation Phase
migration.creation.thread-pool.core-size=5
migration.creation.thread-pool.max-size=10
migration.creation.thread-pool.queue-capacity=50
migration.creation.thread-pool.keep-alive-seconds=60
migration.creation.thread-pool.thread-name-prefix=CreationPhase-
migration.creation.concurrent-correspondences=5
migration.creation.processing-delay-ms=200

# Source API Configuration
source.api.base-url=https://itba.tarasol.cloud/Tarasol4ExtractorApi/Api/secure
source.api.key=test
source.api.timeout=600000
source.api.retry.max-attempts=3

logging.level.org.springframework.web.client.RestTemplate=ERROR

# CORS Configuration - Allow all origins
# Note: CORS is now handled by CorsConfig.java for better control
# spring.web.cors.allowed-origins=* (disabled - using allowedOriginPatterns in code)
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=false
spring.web.cors.max-age=3600